<shader>

	<inputs>
		<input name="EmissiveMap" type="texture" address="wrap" srgb="true"/>
		<input name="MaskMap" type="texture" address="wrap" srgb="true"/>

	</inputs>	

	<params>
		<param name="osPosition">true</param>
		<param name="wsNormal">true</param>
		<param name="vsNormal">true</param>
		<param name="twoSided">true</param>
		<param name="alphaTest">true</param>
		
	</params>
	
	<code> 
	<![CDATA[
		void MaterialShader(in Material_Input input, inout Material material)
		{
		
		
			const float3 tint = float3(0.4, 0.4, 1);

			float3 bordermask = tex2D( MaskMap, input.texCoord ).rgb;
			float3 bubbles = tex2D( EmissiveMap, input.texCoord * float2(2, 1.65) + float2( time * .58, time * .43)).rgb;

			float3 bubbles2 = tex2D( EmissiveMap, input.texCoord * float2(1, 1.23) + float2( time * .35, time * .53)).rgb;		
			float3 bubbles3 = tex2D( EmissiveMap, input.texCoord * float2(1, 2.23) + float2( time * .17, time * .43)).rgb;
	
			float fresnel =  pow(max(-input.vsNormal.z, 0), 2);
			
			material.emissive= ((bubbles2 + bubbles ) * tint * bordermask ) - (bubbles3 * bubbles) ;
		
			material.opacity= ((bubbles2 + bubbles ) *5 ) * bordermask *fresnel  ;
						

			
			
		
			
			
		}
	]]>
	</code>

</shader>