<shader>

	<inputs>
		<input name="noiseMap" type="texture" address="wrap" srgb="true"/>
		<input name="maskMap" type="texture" address="wrap" srgb="true"/>
		<input name="heatingValue" type="float" />
	</inputs>	

	<params>
		<param name="osPosition">true</param>
		<param name="wsPosition">true</param>
		<param name="wsNormal">true</param>
		<param name="vsNormal">true</param>
		<param name="twoSided">false</param>

	</params>
	
	<code>
	<![CDATA[
		void MaterialShader(in Material_Input input, inout Material material)
		{
		
	float t = heatingValue ;

			const float3 tint = float3(2, 0, 0);
			const float3 tint2 = float3(.1, 0, 0);

			float3 mask = tex2D( maskMap, input.texCoord ).rgb;
			float3 noise = tex2D( noiseMap, input.texCoord  * 7 + float2( time * .03 , time * -.01) ).rgb;

			float3 noise2 = tex2D( noiseMap, input.texCoord  * 5 + float2(0, time * .034) ).rgb;
			float fresnel =  pow(1 - max(-input.vsNormal.z, 0.1), 3);
			
		
			 
			material.emissive =  ( fresnel*10 + (noise * noise2 *.2) + .1) * tint * mask * t ;
			
		}
	]]>
	</code>
</shader>