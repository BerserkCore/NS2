<shader>

	<inputs>
		<input name="scanMap" type="texture" address="wrap" srgb="true"/>
		<input name="circuitMap" type="texture" address="wrap" srgb="true"/>
		<input name="glowcircuitMap" type="texture" address="wrap" srgb="true"/>
		<input name="noiseMap" type="texture" address="wrap" srgb="true"/>
		<input name="intensity" type="float">0.0</input>

	</inputs>	

	<params>
		<param name="osPosition">true</param>
		<param name="wsPosition">true</param>
		<param name="wsNormal">true</param>
		<param name="vsNormal">true</param>
		<param name="twoSided">false</param>

	</params>
	
	<code>
	<![CDATA[
		void MaterialShader(in Material_Input input, inout Material material)
		{
		
			float3 color = float3(0, 0.5, 0.0) + float3(0.5 * (1 + cos(time * 5)), 0 , 0);
			color *= color * 0.2;
		
			float3 scan = tex2D( scanMap, input.wsPosition.y * float2(2, .25) + float2(time, time * -1) ).rgb;
			float3 circuit1 = color * tex2D( glowcircuitMap, input.texCoord  * 12 ).rgb;
			float3 circuit2 = color * tex2D( circuitMap, input.texCoord).rgb;
			float3 noise =  tex2D( noiseMap, input.texCoord  * .4 + float2(0, time * .52) ).rgb;
			float fresnel =  pow(1 - max(-input.vsNormal.z, 0), 4);
			 
			material.emissive = intensity * (color + ( circuit2 * scan +  scan * 0.05) + ( circuit1 * fresnel * noise) * 2) ;
			
		}
	]]>
	</code>

</shader>