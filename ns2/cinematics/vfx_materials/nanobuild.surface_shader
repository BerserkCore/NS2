<shader>

	<inputs>
		<input name="scanMap" type="texture" address="wrap" srgb="true"/>
		<input name="circuitMap" type="texture" address="wrap" srgb="true"/>
		<input name="glowcircuitMap" type="texture" address="wrap" srgb="true"/>
		<input name="noiseMap" type="texture" address="wrap" srgb="true"/>

	</inputs>	

	<params>
		<param name="osPosition">true</param>
		<param name="wsPosition">true</param>
		<param name="wsNormal">true</param>
		<param name="vsNormal">true</param>
		<param name="twoSided">false</param>
		<param name="alphaTest">true</param>

	</params>
	
	<code>
	<![CDATA[
		void MaterialShader(in Material_Input input, inout Material material)
		{
		
			const float3 tint = float3(2, 22, 40);
			
		
			float3 scan = tex2D( scanMap, input.wsPosition.y * float2(2, .6) + float2(time * .5, time * -2) ).rgb;
			float3 circuit1 = tex2D( glowcircuitMap, input.texCoord  * 12 ).rgb;
			float3 circuit2 = tex2D( circuitMap, input.texCoord  * float2(5, 4) ).rgb;
			float3 noise = tex2D( noiseMap, input.texCoord  * .4 + float2(0, time * 1) ).rgb;
			float fresnel =  pow(1 - max(-input.vsNormal.z, 0), 4);
			
		
			 
			material.emissive = ( circuit2 * scan ) * tint + ( circuit1 * fresnel * noise) * 100 ;
			
		}
	]]>
	</code>

</shader>