// ======= Copyright (c) 2003-2011, Unknown Worlds Entertainment, Inc. All rights reserved. =======
//
// lua\Infestation.lua
//
//    Created by:   Charlie Cleveland (charlie@unknownworlds.com)
//
//    Patch of infestation generated by hives or cysts.
//
// ========= For more information, visit us at http://www.unknownworlds.com =====================

Script.Load("lua/ScriptActor.lua")
Script.Load("lua/GameEffectsMixin.lua")
Script.Load("lua/TeamMixin.lua")
Script.Load("lua/LOSMixin.lua")
Script.Load("lua/MapBlipMixin.lua")
Script.Load("lua/EntityChangeMixin.lua")

Shared.PrecacheSurfaceShader("materials/infestation/infestation_decal.surface_shader")

class 'Infestation' (ScriptActor)

Infestation.kMapName = "infestation"

Infestation.kDecalVerticalSize = 1
Infestation.kGrowthRateScalar = 1

Infestation.kDefaultGrowthRate = 0.25
local kMaxGrowthRate = 1
Infestation.kInitialRadius = 0.2

Infestation.kThinkTime = 3

local kMaxRadius = 20

if Server then
    Script.Load("lua/Infestation_Server.lua")
elseif Client then    
    Script.Load("lua/Infestation_Client.lua")
end

local networkVars =
{
    minRadius = "float (0 to " .. kMaxRadius .. " by 0.01)",
    maxRadius = "float (0 to " .. kMaxRadius .. " by 0.01)",
    timeCycleStarted = "time",
    growthRate = "float (0 to " .. kMaxGrowthRate .. " by 0.01)",
    
    // Host hive or cyst
    hostAlive = "boolean",
    infestationParentId = "entityid",
    growthOrigin = "vector"
}

AddMixinNetworkVars(GameEffectsMixin, networkVars)
AddMixinNetworkVars(TeamMixin, networkVars)
AddMixinNetworkVars(LOSMixin, networkVars)

function Infestation:OnCreate()

    ScriptActor.OnCreate(self)
    
    InitMixin(self, GameEffectsMixin)
    InitMixin(self, TeamMixin)
    InitMixin(self, EntityChangeMixin)
    InitMixin(self, LOSMixin)
    
    assert(Infestation.kDefaultGrowthRate <= kMaxGrowthRate)
    self.growthRate = Infestation.kDefaultGrowthRate
    
    if Server then
    
        self.hostAlive = true
        
        self.timeCycleStarted = Shared.GetTime() 
        self.minRadius = Infestation.kInitialRadius
        self.maxRadius = kInfestationRadius
        
    end
    
    self.infestationParentId = Entity.invalidId
    
end

function Infestation:OnDestroy()

    ScriptActor.OnDestroy(self)
    
    if Client then
        self:DestroyClientGeometry()
    elseif Server then
        // mark remaining entities as dirty
        self:ChangeInfestationState()
    end
    
end

function Infestation:GetRadius()

    PROFILE("Infestation:GetRadius")
    
    local radiusCached = self.radiusCached
    
    if radiusCached and self.maxRadius == radiusCached and self.hostAlive then
        return radiusCached
    end 
    
    local radius = 0
    
    // Check if Infestation was manually grown.
    if self.maxRadius == self.minRadius then
        radius = self.maxRadius
    else
    
        local cycleDuration = Shared.GetTime() - self.timeCycleStarted
        local growRadius = self.maxRadius - self.minRadius
        local timeRequired = growRadius / self.growthRate
        local fraction = 0
        
        if self.hostAlive then
            fraction = Clamp(cycleDuration / timeRequired, 0, 1)
        else
            fraction = 1 - Clamp(cycleDuration / timeRequired, 0, 1)
        end
        
        radius = self.minRadius + growRadius * fraction
        
    end
    
    if radius == self:GetMaxRadius() then
        self.radiusCached = radius
    end
    
    return radius
    
end

function Infestation:SetInfestationParent(entity)

    self.infestationParentId = entity:GetId()
    self.growthOrigin = entity:GetOrigin()
    
    if entity.GetInfestationGrowthRate then
    
        local newGrowthRate = entity:GetInfestationGrowthRate()
        assert(newGrowthRate <= kMaxGrowthRate)
        self.growthRate = newGrowthRate
        
    end
    
end

function Infestation:SetMinRadius(radius)
    self.minRadius = radius
end    

function Infestation:SetMaxRadius(radius)

    assert(radius <= kMaxRadius)
    self.maxRadius = radius
    
end

function Infestation:SetGrowthRate(growthRate)

    assert(growthRate <= kMaxGrowthRate)
    self.growthRate = growthRate
    
end

/*
function Infestation:OnEntityChange(oldId, newId)

    if oldId == self.infestationParentId then
        self.infestationParentId = Entity.invalidId
        Print("on entity change, setting parent to invalid. class = %s id=%d, cs = %s", self:GetClassName(), self:GetId(), Script.CallStack())
    end    
    
end
*/

function Infestation:GetMaxRadius()
    return self.maxRadius
end

/**
 * Takes 0 to 1.
 */
function Infestation:SetRadiusPercent(percent)
    self.radius = Clamp(percent, 0, 1) * self:GetMaxRadius()
end

function Infestation:SetFullyGrown()
    self.minRadius = self.maxRadius
end

function Infestation:GetTechId()
    return kTechId.Infestation
end

function Infestation:GetIsPointOnInfestation(point, verticalSize)

    local onInfestation = false
    
    // Check radius
    local radius = point:GetDistanceTo(self:GetOrigin())
    if radius <= self:GetRadius() then
    
        // Check dot product
        local toPoint = point - self:GetOrigin()
        local verticalProjection = math.abs( self:GetCoords().yAxis:DotProduct( toPoint ) )
        
        onInfestation = (verticalProjection < verticalSize)
        
    end
    
    return onInfestation
   
end

/**
 * Infestation never sights nearby enemy players.
 */
function Infestation:OverrideCheckVision()
    return false
end

Shared.LinkClassToMap("Infestation", Infestation.kMapName, networkVars)